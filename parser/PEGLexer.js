// Generated from .\\parser\\PEG.g4 by ANTLR 4.13.0
// jshint ignore: start
import * as antlr4 from '../antlr4/index.web.js';


const serializedATN = [4,0,19,164,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,0,1,0,1,1,
1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,3,13,86,8,13,1,14,
1,14,1,14,5,14,91,8,14,10,14,12,14,94,9,14,1,14,1,14,1,15,1,15,1,15,1,15,
3,15,102,8,15,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,
1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,22,5,22,124,8,22,10,22,12,22,127,9,
22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,5,24,137,8,24,10,24,12,24,140,
9,24,1,24,1,24,1,24,3,24,145,8,24,1,24,1,24,1,25,1,25,1,25,1,25,5,25,153,
8,25,10,25,12,25,156,9,25,1,25,3,25,159,8,25,1,25,1,25,1,25,1,25,1,138,0,
26,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,0,
29,14,31,15,33,0,35,0,37,0,39,0,41,0,43,0,45,16,47,17,49,18,51,19,1,0,7,
5,0,8,10,12,13,32,32,39,39,92,92,2,0,39,39,92,92,5,0,98,98,102,102,110,110,
114,114,116,116,3,0,48,57,65,70,97,102,2,0,65,90,97,122,3,0,9,10,13,13,32,
32,2,0,10,10,13,13,168,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,45,
1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,55,1,0,0,0,
5,57,1,0,0,0,7,59,1,0,0,0,9,61,1,0,0,0,11,63,1,0,0,0,13,65,1,0,0,0,15,67,
1,0,0,0,17,69,1,0,0,0,19,71,1,0,0,0,21,73,1,0,0,0,23,75,1,0,0,0,25,77,1,
0,0,0,27,85,1,0,0,0,29,87,1,0,0,0,31,97,1,0,0,0,33,103,1,0,0,0,35,105,1,
0,0,0,37,111,1,0,0,0,39,113,1,0,0,0,41,115,1,0,0,0,43,117,1,0,0,0,45,119,
1,0,0,0,47,128,1,0,0,0,49,132,1,0,0,0,51,148,1,0,0,0,53,54,5,58,0,0,54,2,
1,0,0,0,55,56,5,59,0,0,56,4,1,0,0,0,57,58,5,47,0,0,58,6,1,0,0,0,59,60,5,
955,0,0,60,8,1,0,0,0,61,62,5,63,0,0,62,10,1,0,0,0,63,64,5,42,0,0,64,12,1,
0,0,0,65,66,5,43,0,0,66,14,1,0,0,0,67,68,5,38,0,0,68,16,1,0,0,0,69,70,5,
33,0,0,70,18,1,0,0,0,71,72,5,95,0,0,72,20,1,0,0,0,73,74,5,40,0,0,74,22,1,
0,0,0,75,76,5,41,0,0,76,24,1,0,0,0,77,78,3,27,13,0,78,79,5,46,0,0,79,80,
5,46,0,0,80,81,1,0,0,0,81,82,3,27,13,0,82,26,1,0,0,0,83,86,3,31,15,0,84,
86,8,0,0,0,85,83,1,0,0,0,85,84,1,0,0,0,86,28,1,0,0,0,87,92,5,39,0,0,88,91,
3,31,15,0,89,91,8,1,0,0,90,88,1,0,0,0,90,89,1,0,0,0,91,94,1,0,0,0,92,90,
1,0,0,0,92,93,1,0,0,0,93,95,1,0,0,0,94,92,1,0,0,0,95,96,5,39,0,0,96,30,1,
0,0,0,97,101,5,92,0,0,98,102,3,33,16,0,99,102,3,35,17,0,100,102,3,37,18,
0,101,98,1,0,0,0,101,99,1,0,0,0,101,100,1,0,0,0,102,32,1,0,0,0,103,104,7,
2,0,0,104,34,1,0,0,0,105,106,5,117,0,0,106,107,3,39,19,0,107,108,3,39,19,
0,108,109,3,39,19,0,109,110,3,39,19,0,110,36,1,0,0,0,111,112,7,1,0,0,112,
38,1,0,0,0,113,114,7,3,0,0,114,40,1,0,0,0,115,116,7,4,0,0,116,42,1,0,0,0,
117,118,2,48,57,0,118,44,1,0,0,0,119,125,3,41,20,0,120,124,3,41,20,0,121,
124,3,43,21,0,122,124,5,95,0,0,123,120,1,0,0,0,123,121,1,0,0,0,123,122,1,
0,0,0,124,127,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,0,126,46,1,0,0,0,127,
125,1,0,0,0,128,129,7,5,0,0,129,130,1,0,0,0,130,131,6,23,0,0,131,48,1,0,
0,0,132,133,5,47,0,0,133,134,5,42,0,0,134,138,1,0,0,0,135,137,9,0,0,0,136,
135,1,0,0,0,137,140,1,0,0,0,138,139,1,0,0,0,138,136,1,0,0,0,139,144,1,0,
0,0,140,138,1,0,0,0,141,142,5,42,0,0,142,145,5,47,0,0,143,145,5,0,0,1,144,
141,1,0,0,0,144,143,1,0,0,0,145,146,1,0,0,0,146,147,6,24,0,0,147,50,1,0,
0,0,148,149,5,45,0,0,149,150,5,45,0,0,150,154,1,0,0,0,151,153,8,6,0,0,152,
151,1,0,0,0,153,156,1,0,0,0,154,152,1,0,0,0,154,155,1,0,0,0,155,158,1,0,
0,0,156,154,1,0,0,0,157,159,5,13,0,0,158,157,1,0,0,0,158,159,1,0,0,0,159,
160,1,0,0,0,160,161,5,10,0,0,161,162,1,0,0,0,162,163,6,25,0,0,163,52,1,0,
0,0,11,0,85,90,92,101,123,125,138,144,154,158,1,6,0,0];


const atn = new antlr4.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.DFA(ds, index) );

export default class PEGLexer extends antlr4.Lexer {

    static grammarFileName = "PEG.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "':'", "';'", "'/'", "'\\u03BB'", "'?'", 
                         "'*'", "'+'", "'&'", "'!'", "'_'", "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "RANGE_LITERAL", 
                          "STRING_LITERAL", "ESC", "ID", "WS", "COMMENT", 
                          "LINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "RANGE_LITERAL", 
                      "RANGE_CHAR", "STRING_LITERAL", "ESC", "SPECIAL_ESC", 
                      "HEX_ESC", "TOOL_ESC", "XDIGIT", "LETTER", "DIGIT", 
                      "ID", "WS", "COMMENT", "LINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }
}

PEGLexer.EOF = antlr4.Token.EOF;
PEGLexer.T__0 = 1;
PEGLexer.T__1 = 2;
PEGLexer.T__2 = 3;
PEGLexer.T__3 = 4;
PEGLexer.T__4 = 5;
PEGLexer.T__5 = 6;
PEGLexer.T__6 = 7;
PEGLexer.T__7 = 8;
PEGLexer.T__8 = 9;
PEGLexer.T__9 = 10;
PEGLexer.T__10 = 11;
PEGLexer.T__11 = 12;
PEGLexer.RANGE_LITERAL = 13;
PEGLexer.STRING_LITERAL = 14;
PEGLexer.ESC = 15;
PEGLexer.ID = 16;
PEGLexer.WS = 17;
PEGLexer.COMMENT = 18;
PEGLexer.LINE_COMMENT = 19;



